package com.bankapp.banking_system.Controllers;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bankapp.banking_system.Service.CustomerService;
import com.bankapp.banking_system.ServiceImpl.CustomerServImpl;
import com.bankapp.banking_system.entities.Customer;

@CrossOrigin(origins = "http://localhost:5173")
@RestController
@RequestMapping("/api/customers")
public class CustomerContr {
	
	@Autowired
	private CustomerServImpl custservice;
	
	public CustomerContr(CustomerServImpl customerService) {
        this.custservice = customerService;
    }
	
	
	
	@PostMapping("/register")
    public ResponseEntity<Customer> createCustomer(@RequestBody Customer customer) {
        Customer savedCustomer = custservice.saveCustomer(customer);
        return ResponseEntity.ok(savedCustomer);
    }
	 @GetMapping("/{id}")
	    public ResponseEntity<Customer> getCustomerById(@PathVariable Long id) {
	        Optional<Customer> customer = custservice.getCustomerById(id);
	        return customer.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());
	    }

	    // Get all customers
	    @GetMapping("/all")
	    public ResponseEntity<List<Customer>> getAllCustomers() {
	        List<Customer> customers = custservice.getAllCustomers();
	        return ResponseEntity.ok(customers);
	    }

	    // Update customer details
	    @PutMapping("/{id}")
	    public ResponseEntity<Customer> updateCustomer(@PathVariable Long id, @RequestBody Customer customerDetails) {
	        Customer updatedCustomer = custservice.updateCustomer(id, customerDetails);
	        return ResponseEntity.ok(updatedCustomer);
	    }

	    // Delete a customer
	    @DeleteMapping("/delete/{id}")
	    public ResponseEntity<Void> deleteCustomer(@PathVariable Long id) {
	        custservice.deleteCustomer(id);
	        return ResponseEntity.noContent().build();
	    }
	
	

}
