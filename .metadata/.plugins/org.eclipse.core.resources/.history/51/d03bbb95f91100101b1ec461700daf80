package com.bankapp.banking_system.entities;

import org.springframework.security.crypto.argon2.Argon2PasswordEncoder;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.Transient;
import lombok.Data;

@Entity
@Table(name = "employees")
@Data
public class Employee {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id") // optional, matches column name
    private Long id;

    @Column(name = "username", nullable = false, unique = true)
    private String username;
    
    @Column(name = "password", nullable = false)
    private String password;

    // Optional for future use:
    // @Column(name = "role")
    // private String role;
    
    @Transient
    private static final Argon2PasswordEncoder encoder = Argon2PasswordEncoder.defaultsForSpringSecurity_v5_8();

    public void setPassword(String password) {
        if (!password.startsWith("$argon2id$")) {
            this.password = encoder.encode(password);
        }
    }

    public boolean verifyPassword(String rawPassword) {
        return encoder.matches(rawPassword, this.password);
    }

}