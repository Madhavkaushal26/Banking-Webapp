package com.bankapp.banking_system.ServiceImpl;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bankapp.banking_system.Repository.CustAccRepo;
import com.bankapp.banking_system.Repository.CustOfferRepo;
import com.bankapp.banking_system.Repository.CustomerRepo;
import com.bankapp.banking_system.Service.CustAccService;
import com.bankapp.banking_system.entities.CustAccount;
import com.bankapp.banking_system.entities.CustOfferAvl;
import com.bankapp.banking_system.entities.Customer;
import com.bankapp.banking_system.utils.UnauthorizedAccessException;



@Service 
public class CustAccServImpl implements CustAccService {
	
	@Autowired
    private CustAccRepo custAccRepository;
	
	@Autowired
	private CustomerRepo customerRepo;
	
	@Autowired CustOfferRepo custOfferRepo;

	@Override
	public CustAccount saveAccount(CustAccount account) {
		String custId = account.getCustomer().getCustomerId();
		
		Customer customer = customerRepo.findByCustomerId(custId)
		        .orElseThrow(() -> new IllegalArgumentException("Wrong CustomerId"));
		
		if ("N".equals(customer.getKycStatus())) {
	        throw new UnauthorizedAccessException("KYC Pending");
	    }
		// Fetch the offers availed by the customer
	    List<CustOfferAvl> availedOffers = custOfferRepo.findByCustomer(customer);

	    // Check if the customer has availed Women_Fin24 or YouthBoost offers
	    boolean isWomenFin24Avl = false;
	    boolean isYouthBoostAvl = false;

	    for (CustOfferAvl offer : availedOffers) {
	        String offerName = offer.getOfferReward().getOfferCode();  // Assuming offerCode is the name of the offer
	        if ("Women_Fin24".equals(offerName)) {
	            isWomenFin24Avl = true;
	        } else if ("YouthBoost".equals(offerName)) {
	            isYouthBoostAvl = true;
	        }
	    }

	    // Adjust interest rates based on the offers
	    if ("Savings".equals(account.getAccountType())) {
	        if (isWomenFin24Avl) {
	            account.setInterest(8);  // 8% for Women_Fin24
	        } else if (isYouthBoostAvl) {
	            account.setInterest(7);  // 7% for YouthBoost
	        } else {
	            account.setInterest(5);  // Default interest for Savings
	        }
	    } else if ("Current".equals(account.getAccountType())) {
	        if (isWomenFin24Avl) {
	            account.setInterest(2);  // 2% for Women_Fin24
	        } else if (isYouthBoostAvl) {
	            account.setInterest(3);  // 3% for YouthBoost
	        } else {
	            account.setInterest(1);  // Default interest for Current
	        }
	    }

	    account.setCustomer(customer);
	    return custAccRepository.save(account);
	}

	@Override
	public Optional<CustAccount> getAccountById(Long id) {
		
		return custAccRepository.findById(id);
	}

	@Override
	public List<CustAccount> getAccountsByCustomerId(String customerId) {
		
		return custAccRepository.findByCustomer_CustomerId(customerId);
	}

	@Override
	public void deleteAccount(Long id) {
		
		custAccRepository.deleteById(id);
	}

}
